---
# tasks file for CIS Ubuntu Linux 20.04 LTS Benchmark v1.0.0 Section 1 BENCHMARKS

- name: "1.1.1.1 | Ensure mounting of cramfs filesystems is disabled (Automated)"
  block:

    - name: "1.1.1.1 | Ensure mounting of cramfs filesystems is disabled (Automated) | custom template"
      template:
        src: "{{ ubuntu_2004_cis_section1_rule_1_1_1_1_params_source }}"
        dest: "{{ ubuntu_2004_cis_section1_rule_1_1_1_1_params_dest }}"
        owner: "{{ ubuntu_2004_cis_section1_rule_1_1_1_1_params_owner }}"
        group: "{{ ubuntu_2004_cis_section1_rule_1_1_1_1_params_group }}"
        mode: "{{ ubuntu_2004_cis_section1_rule_1_1_1_1_params_mode }}"

    - name: "1.1.1.1 | Ensure mounting of cramfs filesystems is disabled (Automated) | remove cramfs kernel module"
      modprobe:
        name: "{{ ubuntu_2004_cis_section1_rule_1_1_1_1_params_module_name }}"
        state: "{{ ubuntu_2004_cis_section1_rule_1_1_1_1_params_module_state }}"

  when:
    - ubuntu_2004_cis_section1_rule_1_1_1_1
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_1_1
    - level_1

- name: "1.1.1.2 | Ensure mounting of freevxfs filesystems is disabled (Automated)"
  block:

    - name: "1.1.1.2 | Ensure mounting of freevxfs filesystems is disabled (Automated) | custom template"
      template:
        src: "{{ ubuntu_2004_cis_section1_rule_1_1_1_2_params_source }}"
        dest: "{{ ubuntu_2004_cis_section1_rule_1_1_1_2_params_dest }}"
        owner: "{{ ubuntu_2004_cis_section1_rule_1_1_1_2_params_owner }}"
        group: "{{ ubuntu_2004_cis_section1_rule_1_1_1_2_params_group }}"
        mode: "{{ ubuntu_2004_cis_section1_rule_1_1_1_2_params_mode }}"

    - name: "1.1.1.2 | Ensure mounting of freevxfs filesystems is disabled (Automated) | remove freevxfs kernel module"
      modprobe:
        name: "{{ ubuntu_2004_cis_section1_rule_1_1_1_2_params_module_name }}"
        state: "{{ ubuntu_2004_cis_section1_rule_1_1_1_2_params_module_state }}"

  when:
    - ubuntu_2004_cis_section1_rule_1_1_1_2
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_1_2
    - level_1

- name: "1.1.1.3 | Ensure mounting of jffs2 filesystems is disabled (Automated)"
  block:

    - name: "1.1.1.3 | Ensure mounting of jffs2 filesystems is disabled (Automated) | custom template"
      template:
        src: "{{ ubuntu_2004_cis_section1_rule_1_1_1_3_params_source }}"
        dest: "{{ ubuntu_2004_cis_section1_rule_1_1_1_3_params_dest }}"
        owner: "{{ ubuntu_2004_cis_section1_rule_1_1_1_3_params_owner }}"
        group: "{{ ubuntu_2004_cis_section1_rule_1_1_1_3_params_group }}"
        mode: "{{ ubuntu_2004_cis_section1_rule_1_1_1_3_params_mode }}"

    - name: "1.1.1.3 | Ensure mounting of jffs2 filesystems is disabled (Automated) | remove jffs2 kernel module"
      modprobe:
        name: "{{ ubuntu_2004_cis_section1_rule_1_1_1_3_params_module_name }}"
        state: "{{ ubuntu_2004_cis_section1_rule_1_1_1_3_params_module_state }}"

  when:
    - ubuntu_2004_cis_section1_rule_1_1_1_3
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_1_3
    - level_1

- name: "1.1.1.4 | Ensure mounting of hfs filesystems is disabled (Automated)"
  block:

    - name: "1.1.1.4 | Ensure mounting of hfs filesystems is disabled (Automated) | custom template"
      template:
        src: "{{ ubuntu_2004_cis_section1_rule_1_1_1_4_params_source }}"
        dest: "{{ ubuntu_2004_cis_section1_rule_1_1_1_4_params_dest }}"
        owner: "{{ ubuntu_2004_cis_section1_rule_1_1_1_4_params_owner }}"
        group: "{{ ubuntu_2004_cis_section1_rule_1_1_1_4_params_group }}"
        mode: "{{ ubuntu_2004_cis_section1_rule_1_1_1_4_params_mode }}"

    - name: "1.1.1.4 | Ensure mounting of hfs filesystems is disabled (Automated) | remove hfs kernel module"
      modprobe:
        name: "{{ ubuntu_2004_cis_section1_rule_1_1_1_4_params_module_name }}"
        state: "{{ ubuntu_2004_cis_section1_rule_1_1_1_4_params_module_state }}"

  when:
    - ubuntu_2004_cis_section1_rule_1_1_1_4
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_1_4
    - level_1

- name: "1.1.1.5 | Ensure mounting of hfsplus filesystems is disabled (Automated)"
  block:

    - name: "1.1.1.5 | Ensure mounting of hfsplus filesystems is disabled (Automated) | custom template"
      template:
        src: "{{ ubuntu_2004_cis_section1_rule_1_1_1_5_params_source }}"
        dest: "{{ ubuntu_2004_cis_section1_rule_1_1_1_5_params_dest }}"
        owner: "{{ ubuntu_2004_cis_section1_rule_1_1_1_5_params_owner }}"
        group: "{{ ubuntu_2004_cis_section1_rule_1_1_1_5_params_group }}"
        mode: "{{ ubuntu_2004_cis_section1_rule_1_1_1_5_params_mode }}"

    - name: "1.1.1.5 | Ensure mounting of hfsplus filesystems is disabled (Automated) | remove hfsplus kernel module"
      modprobe:
        name: "{{ ubuntu_2004_cis_section1_rule_1_1_1_5_params_module_name }}"
        state: "{{ ubuntu_2004_cis_section1_rule_1_1_1_5_params_module_state }}"

  when:
    - ubuntu_2004_cis_section1_rule_1_1_1_5
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_1_5
    - level_1

- name: "1.1.1.6 | Ensure mounting of udf filesystems is disabled (Automated)"
  block:

    - name: "1.1.1.6 | Ensure mounting of udf filesystems is disabled (Automated) | custom template"
      template:
        src: "{{ ubuntu_2004_cis_section1_rule_1_1_1_6_params_source }}"
        dest: "{{ ubuntu_2004_cis_section1_rule_1_1_1_6_params_dest }}"
        owner: "{{ ubuntu_2004_cis_section1_rule_1_1_1_6_params_owner }}"
        group: "{{ ubuntu_2004_cis_section1_rule_1_1_1_6_params_group }}"
        mode: "{{ ubuntu_2004_cis_section1_rule_1_1_1_6_params_mode }}"

    - name: "1.1.1.6 | Ensure mounting of udf filesystems is disabled (Automated) | remove udf kernel module"
      modprobe:
        name: "{{ ubuntu_2004_cis_section1_rule_1_1_1_6_params_module_name }}"
        state: "{{ ubuntu_2004_cis_section1_rule_1_1_1_6_params_module_state }}"

  when:
    - ubuntu_2004_cis_section1_rule_1_1_1_6
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_1_6
    - level_1

- name: "1.1.1.7 | Ensure mounting of FAT filesystems is disabled (Automated)"
  block:

    - name: "1.1.1.7 | Ensure mounting of FAT filesystems is disabled (Automated) | custom template"
      template:
        src: "{{ ubuntu_2004_cis_section1_rule_1_1_1_7_params_source }}"
        dest: "{{ ubuntu_2004_cis_section1_rule_1_1_1_7_params_dest }}"
        owner: "{{ ubuntu_2004_cis_section1_rule_1_1_1_7_params_owner }}"
        group: "{{ ubuntu_2004_cis_section1_rule_1_1_1_7_params_group }}"
        mode: "{{ ubuntu_2004_cis_section1_rule_1_1_1_7_params_mode }}"

    - name: "1.1.1.7 | Ensure mounting of FAT filesystems is disabled (Automated) | remove vfat kernel module"
      modprobe:
        name: "{{ ubuntu_2004_cis_section1_rule_1_1_1_7_params_module_name }}"
        state: "{{ ubuntu_2004_cis_section1_rule_1_1_1_7_params_module_state }}"

  when:
    - ubuntu_2004_cis_section1_rule_1_1_1_7
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_1_7
    - level_2

- name: "1.1.2 | Ensure /tmp is configured (Automated)"
  copy:
    src: "{{ ubuntu_2004_cis_section1_rule_1_1_2_params_src }}"
    dest: "{{ ubuntu_2004_cis_section1_rule_1_1_2_params_dest }}"
    owner: "{{ ubuntu_2004_cis_section1_rule_1_1_2_params_owner }}"
    group: "{{ ubuntu_2004_cis_section1_rule_1_1_2_params_group }}"
    mode: "{{ ubuntu_2004_cis_section1_rule_1_1_2_params_mode }}"
    backup: "{{ ubuntu_2004_cis_section1_rule_1_1_2_params_backup }}"
    remote_src: "{{ ubuntu_2004_cis_section1_rule_1_1_2_params_remote_src }}"
    force: "{{ ubuntu_2004_cis_section1_rule_1_1_2_params_force }}"
  notify:
    - systemd tmp.mount reload
  when:
    - ubuntu_2004_cis_section1_rule_1_1_2
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_2
    - level_1

- name: "1.1.3 | Ensure nodev option set on /tmp partition (Automated)\n
         1.1.4 | Ensure nosuid option set on /tmp partition (Automated)\n
         1.1.5 | Ensure noexec option set on /tmp partition (Automated)"
  ini_file:
    path: "{{ ubuntu_2004_cis_section1_rule_1_1_3_and_1_1_4_and_1_1_5_params_path }}"
    section: "{{ ubuntu_2004_cis_section1_rule_1_1_3_and_1_1_4_and_1_1_5_params_section }}"
    option: "{{ ubuntu_2004_cis_section1_rule_1_1_3_and_1_1_4_and_1_1_5_params_option }}"
    value: "{{ ubuntu_2004_cis_section1_rule_1_1_3_and_1_1_4_and_1_1_5_params_value }}"
    owner: "{{ ubuntu_2004_cis_section1_rule_1_1_3_and_1_1_4_and_1_1_5_params_owner }}"
    group: "{{ ubuntu_2004_cis_section1_rule_1_1_3_and_1_1_4_and_1_1_5_params_group }}"
    mode: "{{ ubuntu_2004_cis_section1_rule_1_1_3_and_1_1_4_and_1_1_5_params_mode }}"
    state: "{{ ubuntu_2004_cis_section1_rule_1_1_3_and_1_1_4_and_1_1_5_params_state }}"
    backup: "{{ ubuntu_2004_cis_section1_rule_1_1_3_and_1_1_4_and_1_1_5_params_backup }}"
    no_extra_spaces: "{{ ubuntu_2004_cis_section1_rule_1_1_3_and_1_1_4_and_1_1_5_params_no_extra_spaces }}"
  notify:
    - systemd tmp.mount reload
  when:
    - ubuntu_2004_cis_section1_rule_1_1_3
    - ubuntu_2004_cis_section1_rule_1_1_4
    - ubuntu_2004_cis_section1_rule_1_1_5
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_3
    - rule_1_1_4
    - rule_1_1_5
    - level_1

- name: "1.1.6 | Ensure /dev/shm is configured (Automated)\n
         1.1.7 | Ensure nodev option set on /dev/shm partition (Automated)\n
         1.1.8 | Ensure nosuid option set on /dev/shm partition (Automated)\n
         1.1.9 | Ensure noexec option set on /dev/shm partition (Automated)"
  mount:
    src: "{{ ubuntu_2004_cis_section1_rule_1_1_6_and_1_1_7_and_1_1_8_and_1_1_9_params_src }}"
    path: "{{ ubuntu_2004_cis_section1_rule_1_1_6_and_1_1_7_and_1_1_8_and_1_1_9_params_path }}"
    fstype: "{{ ubuntu_2004_cis_section1_rule_1_1_6_and_1_1_7_and_1_1_8_and_1_1_9_params_fstype }}"
    opts: "{{ ubuntu_2004_cis_section1_rule_1_1_6_and_1_1_7_and_1_1_8_and_1_1_9_params_opts }}"
    dump: "{{ ubuntu_2004_cis_section1_rule_1_1_6_and_1_1_7_and_1_1_8_and_1_1_9_params_dump }}"
    passno: "{{ ubuntu_2004_cis_section1_rule_1_1_6_and_1_1_7_and_1_1_8_and_1_1_9_params_passno }}"
    state: "{{ ubuntu_2004_cis_section1_rule_1_1_6_and_1_1_7_and_1_1_8_and_1_1_9_params_state }}"
    backup: "{{ ubuntu_2004_cis_section1_rule_1_1_6_and_1_1_7_and_1_1_8_and_1_1_9_params_backup }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_1_6
    - ubuntu_2004_cis_section1_rule_1_1_7
    - ubuntu_2004_cis_section1_rule_1_1_8
    - ubuntu_2004_cis_section1_rule_1_1_9
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_6
    - rule_1_1_7
    - rule_1_1_8
    - rule_1_1_9
    - level_1

- name: "1.1.10 | Ensure separate partition exists for /var (Automated) | Not IMPLEMENTED"
  debug:
    msg:
      - "CIS Ubuntu 20.04 benchmark 1.1.10 HAS NOT BEEN IMPLEMENTED in this Ansible Role."
      - "Separate partitions and their mount point entries may always vary based on the user's system architecture and disk layout."
      - "Highly recommend to perform the actions for 1.1.10 prior to applying this Role."
  when:
    - ubuntu_2004_cis_section1_rule_1_1_10
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_10
    - level_2

- name: "1.1.11 | Ensure separate partition exists for /var/tmp (Automated) | Not IMPLEMENTED"
  debug:
    msg:
      - "CIS Ubuntu 20.04 benchmark 1.1.11 HAS NOT BEEN IMPLEMENTED in this Ansible Role."
      - "Separate partitions and their mount point entries may always vary based on the user or organization's system architecture and disk layout."
      - "Highly recommend to perform the actions for 1.1.11 prior to applying this Role."
  when:
    - ubuntu_2004_cis_section1_rule_1_1_11
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_11
    - level_2

- name: "1.1.12 | Ensure nodev option set on /var/tmp partition (Automated) | Not IMPLEMENTED"
  debug:
    msg:
      - "CIS Ubuntu 20.04 benchmark 1.1.12 HAS NOT BEEN IMPLEMENTED in this Ansible Role."
      - "Separate partitions and their mount point entries may always vary based on the user's system architecture and disk layout."
      - "Highly recommend to perform the actions for 1.1.12 prior to applying this Role."
  when:
    - ubuntu_2004_cis_section1_rule_1_1_12
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_12
    - level_1

- name: "1.1.13 | Ensure nosuid option set on /var/tmp partition (Automated) | Not IMPLEMENTED"
  debug:
    msg:
      - "CIS Ubuntu 20.04 benchmark 1.1.13 HAS NOT BEEN IMPLEMENTED in this Ansible Role."
      - "Separate partitions and their mount point entries may always vary based on the user's system architecture and disk layout."
      - "Highly recommend to perform the actions for 1.1.13 prior to applying this Role."
  when:
    - ubuntu_2004_cis_section1_rule_1_1_13
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_13
    - level_1

- name: "1.1.14 | Ensure noexec option set on /var/tmp partition (Automated) | Not IMPLEMENTED"
  debug:
    msg:
      - "CIS Ubuntu 20.04 benchmark 1.1.14 HAS NOT BEEN IMPLEMENTED in this Ansible Role."
      - "Separate partitions and their mount point entries may always vary based on the user's system architecture and disk layout."
      - "Highly recommend to perform the actions for 1.1.14 prior to applying this Role."
  when:
    - ubuntu_2004_cis_section1_rule_1_1_14
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_14
    - level_1

- name: "1.1.15 | Ensure separate partition exists for /var/log (Automated) | Not IMPLEMENTED"
  debug:
    msg:
      - "CIS Ubuntu 20.04 benchmark 1.1.15 HAS NOT BEEN IMPLEMENTED in this Ansible Role."
      - "Separate partitions and their mount point entries may always vary based on the user's system architecture and disk layout."
      - "Highly recommend to perform the actions for 1.1.15 prior to applying this Role."
  when:
    - ubuntu_2004_cis_section1_rule_1_1_15
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_15
    - level_2

- name: "1.1.16 | Ensure separate partition exists for /var/log/audit (Automated) | Not IMPLEMENTED"
  debug:
    msg:
      - "CIS Ubuntu 20.04 benchmark 1.1.16 HAS NOT BEEN IMPLEMENTED in this Ansible Role."
      - "Separate partitions and their mount point entries may always vary based on the user's system architecture and disk layout."
      - "Highly recommend to perform the actions for 1.1.16 prior to applying this Role."
  when:
    - ubuntu_2004_cis_section1_rule_1_1_16
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_16
    - level_2

- name: "1.1.17 | Ensure separate partition exists for /home (Automated) | Not IMPLEMENTED"
  debug:
    msg:
      - "CIS Ubuntu 20.04 benchmark 1.1.17 HAS NOT BEEN IMPLEMENTED in this Ansible Role."
      - "Separate partitions and their mount point entries may always vary based on the user's system architecture and disk layout."
      - "Highly recommend to perform the actions for 1.1.17 prior to applying this Role."
  when:
    - ubuntu_2004_cis_section1_rule_1_1_17
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_17
    - level_2

- name: "1.1.18 | Ensure nodev option set on /home partition (Automated) | Not IMPLEMENTED"
  debug:
    msg:
      - "CIS Ubuntu 20.04 benchmark 1.1.18 HAS NOT BEEN IMPLEMENTED in this Ansible Role."
      - "Separate partitions and their mount point entries may always vary based on the user's system architecture and disk layout."
      - "Highly recommend to perform the actions for 1.1.18 prior to applying this Role."
  when:
    - ubuntu_2004_cis_section1_rule_1_1_18
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_18
    - level_1

- name: "1.1.19 | Ensure nodev option set on removable media partitions (Manual) | Not IMPLEMENTED"
  debug:
    msg:
      - "CIS Ubuntu 20.04 benchmark 1.1.19 HAS NOT BEEN IMPLEMENTED in this Ansible Role."
      - "Not all systems (especially Cloud VMs) will have a removable media partition."
      - "If applicable, highly recommend to perform the actions for 1.1.19 prior to applying this Role."
  when:
    - ubuntu_2004_cis_section1_rule_1_1_19
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_19
    - level_1

- name: "1.1.20 | Ensure nosuid option set on removable media partitions (Manual) | Not IMPLEMENTED"
  debug:
    msg:
      - "CIS Ubuntu 20.04 benchmark 1.1.20 HAS NOT BEEN IMPLEMENTED in this Ansible Role."
      - "Not all systems (especially Cloud VMs) will have a removable media partition."
      - "If applicable, highly recommend to perform the actions for 1.1.20 prior to applying this Role."
  when:
    - ubuntu_2004_cis_section1_rule_1_1_20
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_20
    - level_1

- name: "1.1.21 | Ensure noexec option set on removable media partitions (Manual) | Not IMPLEMENTED"
  debug:
    msg:
      - "CIS Ubuntu 20.04 benchmark 1.1.21 HAS NOT BEEN IMPLEMENTED in this Ansible Role."
      - "Not all systems (especially Cloud VMs) will have a removable media partition."
      - "If applicable, highly recommend to perform the actions for 1.1.21 prior to applying this Role."
  when:
    - ubuntu_2004_cis_section1_rule_1_1_21
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_21
    - level_1

- name: "1.1.22 | Ensure sticky bit is set on all world-writable directories (Automated)"
  script: "{{ ubuntu_2004_cis_section1_rule_1_1_22_params_script }}"
  changed_when: false
  # failed_when: false
  when:
    - ubuntu_2004_cis_section1_rule_1_1_22
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_22
    - level_1

- name: "1.1.23 | Disable Automounting (Automated) | autofs: systemd service mask"
  systemd:
    name: "{{ ubuntu_2004_cis_section1_rule_1_1_23_params_service_name }}"
    daemon_reload: "{{ ubuntu_2004_cis_section1_rule_1_1_23_params_daemon_reload }}"
    enabled: "{{ ubuntu_2004_cis_section1_rule_1_1_23_params_enabled }}"
    masked: "{{ ubuntu_2004_cis_section1_rule_1_1_23_params_masked }}"
  ignore_errors: "{{ ubuntu_2004_cis_section1_rule_1_1_23_params_ignore_errors }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_1_23
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_23
    - level_1

- name: "1.1.23 | Disable Automounting (Automated) | autofs: apt package purge"
  apt:
    name: "{{ ubuntu_2004_cis_section1_rule_1_1_23_params_package_name }}"
    state: "{{ ubuntu_2004_cis_section1_rule_1_1_23_params_package_state }}"
    purge: "{{ ubuntu_2004_cis_section1_rule_1_1_23_params_package_purge }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_1_23
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_23
    - level_1

- name: "1.1.24 | Disable USB Storage (Automated)"
  block:

    - name: "1.1.24 | Disable USB Storage (Automated) | custom template"
      template:
        src: "{{ ubuntu_2004_cis_section1_rule_1_1_24_params_source }}"
        dest: "{{ ubuntu_2004_cis_section1_rule_1_1_24_params_dest }}"
        owner: "{{ ubuntu_2004_cis_section1_rule_1_1_24_params_owner }}"
        group: "{{ ubuntu_2004_cis_section1_rule_1_1_24_params_group }}"
        mode: "{{ ubuntu_2004_cis_section1_rule_1_1_24_params_mode }}"

    - name: "1.1.24 | Disable USB Storage (Automated) | remove usb-storage kernel module"
      modprobe:
        name: "{{ ubuntu_2004_cis_section1_rule_1_1_24_params_module_name }}"
        state: "{{ ubuntu_2004_cis_section1_rule_1_1_24_params_module_state }}"

  when:
    - ubuntu_2004_cis_section1_rule_1_1_24
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_1_24
    - level_1

- name: "1.2.1 | Ensure package manager repositories are configured (Manual) | perform apt-cache policy check"
  script: "{{ ubuntu_2004_cis_section1_rule_1_2_1_params_script }}"
  register: apt_cache_policy_output
  changed_when: false
  when:
    - ubuntu_2004_cis_section1_rule_1_2_1
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_2_1
    - level_1

- name: "1.2.1 | Ensure package manager repositories are configured (Manual) | print apt-cache policy"
  debug:
    var: "{{ apt_cache_policy_output.stdout_lines  | to_nice_json }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_2_1
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_2_1
    - level_1

- name: "1.2.2 | Ensure GPG keys are configured (Manual) | perform apt-key list check"
  script: "{{ ubuntu_2004_cis_section1_rule_1_2_2_params_script }}"
  register: apt_key_list_output
  changed_when: false
  when:
    - ubuntu_2004_cis_section1_rule_1_2_2
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_2_2
    - level_1

- name: "1.2.2 | Ensure GPG keys are configured (Manual) | print apt-key list"
  debug:
    var: "{{ apt_key_list_output.stdout_lines  | to_nice_json }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_2_2
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_2_2
    - level_1

- name: "1.3.1 | Ensure sudo is installed (Automated)"
  apt:
    name: "{{ ubuntu_2004_cis_section1_rule_1_3_1_params_package_name }}"
    state: "{{ ubuntu_2004_cis_section1_rule_1_3_1_params_package_state }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_3_1
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_3_1
    - level_1

- name: "1.3.2 | Ensure sudo commands use pty (Automated)"
  lineinfile:
    path: "{{ ubuntu_2004_cis_section1_rule_1_3_2_params_path }}"
    line: "{{ ubuntu_2004_cis_section1_rule_1_3_2_params_line }}"
    regexp: "{{ ubuntu_2004_cis_section1_rule_1_3_2_params_regexp }}"
    state: "{{ ubuntu_2004_cis_section1_rule_1_3_2_params_state }}"
    owner: "{{ ubuntu_2004_cis_section1_rule_1_3_2_params_owner }}"
    group: "{{ ubuntu_2004_cis_section1_rule_1_3_2_params_group }}"
    mode: "{{ ubuntu_2004_cis_section1_rule_1_3_2_params_mode }}"
    validate: "{{ ubuntu_2004_cis_section1_rule_1_3_2_params_validate }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_3_2
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_3_2
    - level_1

- name: "1.3.3 | Ensure sudo log file exists (Automated)"
  lineinfile:
    path: "{{ ubuntu_2004_cis_section1_rule_1_3_3_params_path }}"
    line: "{{ ubuntu_2004_cis_section1_rule_1_3_3_params_line }}"
    regexp: "{{ ubuntu_2004_cis_section1_rule_1_3_3_params_regexp }}"
    state: "{{ ubuntu_2004_cis_section1_rule_1_3_3_params_state }}"
    owner: "{{ ubuntu_2004_cis_section1_rule_1_3_3_params_owner }}"
    group: "{{ ubuntu_2004_cis_section1_rule_1_3_3_params_group }}"
    mode: "{{ ubuntu_2004_cis_section1_rule_1_3_3_params_mode }}"
    validate: "{{ ubuntu_2004_cis_section1_rule_1_3_3_params_validate }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_3_3
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_3_3
    - level_1

- name: "1.4.1 | Ensure AIDE is installed (Automated)"
  block:

    - name: "1.4.1 | Ensure AIDE is installed (Automated) | Packages installation"
      apt:
        name: "{{ ubuntu_2004_cis_section1_rule_1_4_1_params_package_name }}"
        state: "{{ ubuntu_2004_cis_section1_rule_1_4_1_params_package_state }}"

    - name: "1.4.1 | Ensure AIDE is installed (Automated) | Check if DB exists"
      stat:
        path: "{{ ubuntu_2004_cis_section1_rule_1_4_1_params_db_file_name }}"
      register: aide_db_file

    - name: "1.4.1 | Ensure AIDE is installed (Automated) | Initialize DB if it DOESN'T Exist"
      command:
        cmd: "{{ ubuntu_2004_cis_section1_rule_1_4_1_params_db_file_init_command }}"
        creates: "{{ ubuntu_2004_cis_section1_rule_1_4_1_params_db_file_name }}"
      when:
        - not aide_db_file.stat.exists
        - not skip_for_development

  when:
    - ubuntu_2004_cis_section1_rule_1_4_1
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_4_1
    - level_1

- name: "1.4.2 | Ensure filesystem integrity is regularly checked (Automated)"
  cron:
    name: "{{ ubuntu_2004_cis_section1_rule_1_4_2_params_name }}"
    minute: "{{ ubuntu_2004_cis_section1_rule_1_4_2_params_minute }}"
    hour: "{{ ubuntu_2004_cis_section1_rule_1_4_2_params_hour }}"
    day: "{{ ubuntu_2004_cis_section1_rule_1_4_2_params_day }}"
    month: "{{ ubuntu_2004_cis_section1_rule_1_4_2_params_month }}"
    weekday: "{{ ubuntu_2004_cis_section1_rule_1_4_2_params_weekday }}"
    user: "{{ ubuntu_2004_cis_section1_rule_1_4_2_params_user }}"
    job: "{{ ubuntu_2004_cis_section1_rule_1_4_2_params_job }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_4_2
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_4_2
    - level_1

- name: "1.5.1 | Ensure bootloader password is set (Automated)"
  block:

    - name: "1.5.1 | Ensure bootloader password is set (Automated) | Set super_users"
      lineinfile:
        path: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params_set_superusers_path }}"
        line: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params_set_superusers_line }}"
        regexp: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params_set_superusers_regexp }}"
        state: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params_set_superusers_state }}"
        owner: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params_set_superusers_owner }}"
        group: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params_set_superusers_group }}"
        mode: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params_set_superusers_mode }}"
      when:
        - ubuntu_2004_cis_section1_rule_1_5_1_set_superuser
      notify:
        - update grub configuration
        - reapply permissions to bootloader configuration
        # ^ to handle the fact that handlers run after tasks which change bootloader config permissions

    # Example taken from https://github.com/florianutz/Ubuntu1804-CIS/blob/master/tasks/section1.yml
    - name: "1.5.1 | Ensure bootloader password is set (Automated) | Generate and Encrypt password"
      shell: "set -eou pipefail && \
          PASSWORD=$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c18) && \
          echo -e \"$PASSWORD\n$PASSWORD\" | grub-mkpasswd-pbkdf2 | awk '/grub.pbkdf/{print$NF}'"
      args:
        executable: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params_bootloader_password_executable }}"
      register: bootloader_encrypted_password
      when:
        - ubuntu_2004_cis_section1_rule_1_5_1_password_pbkdf2

    - name: "1.5.1 | Ensure bootloader password is set (Automated) | Set bootloader encrypted password"
      lineinfile:
        path: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params_bootloader_password_path }}"
        line: password_pbkdf2 root {{ bootloader_encrypted_password.stdout }}
        regexp: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params_bootloader_password_regexp }}"
        insertafter: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params_bootloader_password_insertafter }}"
        state: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params_bootloader_password_state }}"
        owner: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params_bootloader_password_owner }}"
        group: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params_bootloader_password_group }}"
        mode: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params_bootloader_password_mode }}"
      when:
        - ubuntu_2004_cis_section1_rule_1_5_1_password_pbkdf2
      notify:
        - update grub configuration
        - reapply permissions to bootloader configuration
        # ^ to handle the fact that handlers run after tasks which change bootloader config permissions

    - name: "1.5.1 | Ensure bootloader password is set (Automated) | Add --unrestricted for system boot without password"
      replace:
        path: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params_unrestricted_path }}"
        regexp: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params_unrestricted_regex }}"
        replace: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params_unrestricted_replace }}"
        owner: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params_unrestricted_owner }}"
        group: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params_unrestricted_group }}"
        mode: "{{ ubuntu_2004_cis_section1_rule_1_5_1_params_unrestricted_mode }}"
      when:
        - ubuntu_2004_cis_section1_rule_1_5_1_unrestricted
      notify:
        - update grub configuration
        - reapply permissions to bootloader configuration
        # ^ to handle the fact that handlers run after tasks which change bootloader config permissions

  when:
    - ubuntu_2004_cis_section1_rule_1_5_1
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_5_1
    - level_1

- name: "1.5.2 | Ensure permissions on bootloader config are configured (Automated)"
  file:
    path: "{{ ubuntu_2004_cis_section1_rule_1_5_2_params_path }}"
    mode: "{{ ubuntu_2004_cis_section1_rule_1_5_2_params_mode }}"
    owner: "{{ ubuntu_2004_cis_section1_rule_1_5_2_params_owner }}"
    group: "{{ ubuntu_2004_cis_section1_rule_1_5_2_params_group }}"
    state: "{{ ubuntu_2004_cis_section1_rule_1_5_2_params_state }}"
  notify:
    - reapply permissions to bootloader configuration
  when:
    - ubuntu_2004_cis_section1_rule_1_5_2
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_5_2
    - level_1

- name: "1.5.3 | Ensure authentication required for single user mode (Automated)"
  block:

    - name: "1.5.3 | Ensure authentication required for single user mode (Automated) | Audit if root has a password"
      command: "{{ ubuntu_2004_cis_section1_rule_1_5_3_params_audit_root_password_command }}"
      # ^ Evaluates if root has a password. If root has password, rc is 0.
      register: audit_root_password_command_result
      changed_when: false
      failed_when: false

    - name: "1.5.3 | Ensure authentication required for single user mode (Automated) | Set password for root"
      shell: "set -eou pipefail && \
          PASSWORD=$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c18) && \
          echo -e \"$PASSWORD\n$PASSWORD\" | passwd root"
      args:
        executable: "{{ ubuntu_2004_cis_section1_rule_1_5_3_params_audit_root_password_executable }}"
      when:
        - audit_root_password_command_result.rc == 0
        # ^ This conditions allows to only set/change root password when it has been evaluated
        # that root did not originally have a password.

  when:
    - ubuntu_2004_cis_section1_rule_1_5_3
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_5_3
    - level_1

- name: "1.6.1 | Ensure XD/NX support is enabled (Automated)"
  command: "{{ ubuntu_2004_cis_section1_rule_1_6_1_params_audit_xd_nx_command }}"
  # ^ Evaluates if xd/nx are supported. If supported, rc is 0.
  register: audit_xd_nx_command_result
  changed_when: false
  failed_when: "'FAILED' in audit_xd_nx_command_result.stderr"
  # ^ Fail task if xd/nx grep command returns any non 0 return code
  when:
    - ubuntu_2004_cis_section1_rule_1_6_1
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_6_1
    - level_1

- name: "1.6.2 | Ensure address space layout randomization (ASLR) is enabled (Automated)"
  sysctl:
    name: "{{ ubuntu_2004_cis_section1_rule_1_6_2_params_name }}"
    value: "{{ ubuntu_2004_cis_section1_rule_1_6_2_params_value }}"
    state: "{{ ubuntu_2004_cis_section1_rule_1_6_2_params_state }}"
    reload: "{{ ubuntu_2004_cis_section1_rule_1_6_2_params_reload }}"
    sysctl_set: "{{ ubuntu_2004_cis_section1_rule_1_6_2_params_sysctl_set }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_6_2
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_6_2
    - level_1

- name: "1.6.3 | Ensure prelink is disabled (Automated)"
  block:

    - name: "1.6.3 | Ensure prelink is disabled (Automated) | undo all prelinking"
      command: "{{ ubuntu_2004_cis_section1_rule_1_6_3_params_prelink_command }}"
      failed_when: false

    - name: "1.6.3 | Ensure prelink is disabled (Automated) | uninstall/purge prelink"
      apt:
        name: "{{ ubuntu_2004_cis_section1_rule_1_6_3_params_package_name }}"
        state: "{{ ubuntu_2004_cis_section1_rule_1_6_3_params_package_state }}"
        purge: "{{ ubuntu_2004_cis_section1_rule_1_6_3_params_package_purge }}"

  when:
    - "'prelink' in ansible_facts.packages"
    - ubuntu_2004_cis_section1_rule_1_6_3
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_6_3
    - level_1

- name: "1.6.4 | Ensure core dumps are restricted (Automated)"
  block:

    - name: "1.6.4 | Ensure core dumps are restricted (Automated) | limit for user groups"
      lineinfile:
        path: "{{ ubuntu_2004_cis_section1_rule_1_6_4_params_core_dump_security_limit_path }}"
        line: "{{ ubuntu_2004_cis_section1_rule_1_6_4_params_core_dump_security_limit_line }}"
        regexp: "{{ ubuntu_2004_cis_section1_rule_1_6_4_params_core_dump_security_limit_regexp }}"
        state: "{{ ubuntu_2004_cis_section1_rule_1_6_4_params_core_dump_security_limit_state }}"
        owner: "{{ ubuntu_2004_cis_section1_rule_1_6_4_params_core_dump_security_limit_owner }}"
        group: "{{ ubuntu_2004_cis_section1_rule_1_6_4_params_core_dump_security_limit_group }}"
        mode: "{{ ubuntu_2004_cis_section1_rule_1_6_4_params_core_dump_security_limit_mode }}"
        backup: yes

    - name: "1.6.4 | Ensure core dumps are restricted (Automated) | set kernel parameter fs.suid_dumpable"
      sysctl:
        name: "{{ ubuntu_2004_cis_section1_rule_1_6_4_params_core_dump_kernel_parameter_name }}"
        value: "{{ ubuntu_2004_cis_section1_rule_1_6_4_params_core_dump_kernel_parameter_value }}"
        state: "{{ ubuntu_2004_cis_section1_rule_1_6_4_params_core_dump_kernel_parameter_state }}"
        reload: "{{ ubuntu_2004_cis_section1_rule_1_6_4_params_core_dump_kernel_parameter_reload }}"
        sysctl_set: "{{ ubuntu_2004_cis_section1_rule_1_6_4_params_core_dump_kernel_parameter_sysctl_set }}"

    - name: "1.6.4 | Ensure core dumps are restricted (Automated) | systemd-coredump package"
      apt:
        name: "{{ ubuntu_2004_cis_section1_rule_1_6_4_params_core_dump_package_name }}"
        state: "{{ ubuntu_2004_cis_section1_rule_1_6_4_params_core_dump_package_state }}"

    - name: "1.6.4 | Ensure core dumps are restricted (Automated) | systemd-coredump conf file Storage=none modification"
      ini_file:
        path: "{{ ubuntu_2004_cis_section1_rule_1_6_4_params_core_dump_service_conf_path }}"
        section: "{{ ubuntu_2004_cis_section1_rule_1_6_4_params_core_dump_service_conf_section }}"
        option: "{{ ubuntu_2004_cis_section1_rule_1_6_4_params_core_dump_service_conf_storage_option }}"
        value: "{{ ubuntu_2004_cis_section1_rule_1_6_4_params_core_dump_service_conf_storage_value }}"
        owner: "{{ ubuntu_2004_cis_section1_rule_1_6_4_params_core_dump_service_conf_owner }}"
        group: "{{ ubuntu_2004_cis_section1_rule_1_6_4_params_core_dump_service_conf_group }}"
        mode: "{{ ubuntu_2004_cis_section1_rule_1_6_4_params_core_dump_service_conf_mode }}"
        state: "{{ ubuntu_2004_cis_section1_rule_1_6_4_params_core_dump_service_conf_state }}"
        no_extra_spaces: "{{ ubuntu_2004_cis_section1_rule_1_6_4_params_core_dump_service_conf_no_extra_spaces }}"

    - name: "1.6.4 | Ensure core dumps are restricted (Automated) | systemd-coredump conf file ProcessSizeMax=0 modification"
      ini_file:
        path: "{{ ubuntu_2004_cis_section1_rule_1_6_4_params_core_dump_service_conf_path }}"
        section: "{{ ubuntu_2004_cis_section1_rule_1_6_4_params_core_dump_service_conf_section }}"
        option: "{{ ubuntu_2004_cis_section1_rule_1_6_4_params_core_dump_service_conf_processsizemax_option }}"
        value: "{{ ubuntu_2004_cis_section1_rule_1_6_4_params_core_dump_service_conf_processsizemax_value }}"
        owner: "{{ ubuntu_2004_cis_section1_rule_1_6_4_params_core_dump_service_conf_owner }}"
        group: "{{ ubuntu_2004_cis_section1_rule_1_6_4_params_core_dump_service_conf_group }}"
        mode: "{{ ubuntu_2004_cis_section1_rule_1_6_4_params_core_dump_service_conf_mode }}"
        state: "{{ ubuntu_2004_cis_section1_rule_1_6_4_params_core_dump_service_conf_state }}"
        no_extra_spaces: "{{ ubuntu_2004_cis_section1_rule_1_6_4_params_core_dump_service_conf_no_extra_spaces }}"

  when:
    - ubuntu_2004_cis_section1_rule_1_6_4
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_6_4
    - level_1

- name: "1.7.1.1 | Ensure AppArmor is installed (Automated) | apparmor and apparmor-utils package"
  apt:
    name: "{{ ubuntu_2004_cis_section1_rule_1_7_1_1_params_name }}"
    state: "{{ ubuntu_2004_cis_section1_rule_1_7_1_1_params_state }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_7_1_1
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_7_1_1
    - level_1

- name: "1.7.1.2 | Ensure Ensure AppArmor is enabled in the bootloader configuration (Automated)"
  replace:
    path: "{{ ubuntu_2004_cis_section1_rule_1_7_1_2_params_apparmor_enabled_path }}"
    regexp: "{{ ubuntu_2004_cis_section1_rule_1_7_1_2_params_apparmor_enabled_regex }}"
    replace: "{{ ubuntu_2004_cis_section1_rule_1_7_1_2_params_apparmor_enabled_replace }}"
    owner: "{{ ubuntu_2004_cis_section1_rule_1_7_1_2_params_apparmor_enabled_owner }}"
    group: "{{ ubuntu_2004_cis_section1_rule_1_7_1_2_params_apparmor_enabled_group }}"
    mode: "{{ ubuntu_2004_cis_section1_rule_1_7_1_2_params_apparmor_enabled_mode }}"
    backup: yes
  notify:
    - update grub configuration
    - reapply permissions to bootloader configuration
    # ^ to handle the fact that handlers run after tasks which change bootloader config permissions
  when:
    - ubuntu_2004_cis_section1_rule_1_7_1_2
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_7_1_2
    - level_1

- name: "1.7.1.3 | Ensure all AppArmor Profiles are in enforce or complain mode (Automated)"
  command: "{{ ubuntu_2004_cis_section1_rule_1_7_1_3_params_apparmor_command }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_7_1_3
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_7_1_3
    - level_1

- name: "1.7.1.4 | Ensure all AppArmor Profiles are enforcing (Automated)"
  command: "{{ ubuntu_2004_cis_section1_rule_1_7_1_4_params_apparmor_command }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_7_1_4
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_7_1_4
    - level_2

- name: "1.8.1.1 | Ensure message of the day is configured properly (Automated)"
  template:
    src: "{{ ubuntu_2004_cis_section1_rule_1_8_1_1_params_source }}"
    dest: "{{ ubuntu_2004_cis_section1_rule_1_8_1_1_params_dest }}"
    owner: "{{ ubuntu_2004_cis_section1_rule_1_8_1_1_params_owner }}"
    group: "{{ ubuntu_2004_cis_section1_rule_1_8_1_1_params_group }}"
    mode: "{{ ubuntu_2004_cis_section1_rule_1_8_1_1_params_mode }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_8_1_1
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_8_1_1
    - level_1

- name: "1.8.1.2 | Ensure local login warning banner is configured properly (Automated)"
  template:
    src: "{{ ubuntu_2004_cis_section1_rule_1_8_1_2_params_source }}"
    dest: "{{ ubuntu_2004_cis_section1_rule_1_8_1_2_params_dest }}"
    owner: "{{ ubuntu_2004_cis_section1_rule_1_8_1_2_params_owner }}"
    group: "{{ ubuntu_2004_cis_section1_rule_1_8_1_2_params_group }}"
    mode: "{{ ubuntu_2004_cis_section1_rule_1_8_1_2_params_mode }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_8_1_2
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_8_1_2
    - level_1

- name: "1.8.1.3 | Ensure remote login warning banner is configured properly (Automated)"
  template:
    src: "{{ ubuntu_2004_cis_section1_rule_1_8_1_3_params_source }}"
    dest: "{{ ubuntu_2004_cis_section1_rule_1_8_1_3_params_dest }}"
    owner: "{{ ubuntu_2004_cis_section1_rule_1_8_1_3_params_owner }}"
    group: "{{ ubuntu_2004_cis_section1_rule_1_8_1_3_params_group }}"
    mode: "{{ ubuntu_2004_cis_section1_rule_1_8_1_3_params_mode }}"
  when:
    - ubuntu_2004_cis_section1_rule_1_8_1_3
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_8_1_3
    - level_1

- name: "1.8.1.4 | Ensure permissions on /etc/motd are configured (Automated)"
  block:

    - name: "1.8.1.4 | Ensure permissions on /etc/motd are configured (Automated) | Check if /etc/motd exists"
      stat:
        path: "{{ ubuntu_2004_cis_section1_rule_1_8_1_4_params_path }}"
      register: etc_motd_file
      failed_when: false

    - name: "1.8.1.4 | Ensure permissions on /etc/motd are configured (Automated) | set /etc/motd permissions"
      file:
        path: "{{ ubuntu_2004_cis_section1_rule_1_8_1_4_params_path }}"
        mode: "{{ ubuntu_2004_cis_section1_rule_1_8_1_4_params_mode }}"
        owner: "{{ ubuntu_2004_cis_section1_rule_1_8_1_4_params_owner }}"
        group: "{{ ubuntu_2004_cis_section1_rule_1_8_1_4_params_group }}"
        state: "{{ ubuntu_2004_cis_section1_rule_1_8_1_4_params_state }}"
      when:
        - etc_motd_file.stat.exists

  when:
    - ubuntu_2004_cis_section1_rule_1_8_1_4
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_8_1_4
    - level_1

- name: "1.8.1.5 | Ensure permissions on /etc/issue are configured (Automated)"
  block:

    - name: "1.8.1.5 | Ensure permissions on /etc/issue are configured (Automated) | Check if /etc/issue exists"
      stat:
        path: "{{ ubuntu_2004_cis_section1_rule_1_8_1_5_params_path }}"
      register: etc_issue_file
      failed_when: false

    - name: "1.8.1.5 | Ensure permissions on /etc/issue are configured (Automated) | set /etc/issue permissions"
      file:
        path: "{{ ubuntu_2004_cis_section1_rule_1_8_1_5_params_path }}"
        mode: "{{ ubuntu_2004_cis_section1_rule_1_8_1_5_params_mode }}"
        owner: "{{ ubuntu_2004_cis_section1_rule_1_8_1_5_params_owner }}"
        group: "{{ ubuntu_2004_cis_section1_rule_1_8_1_5_params_group }}"
        state: "{{ ubuntu_2004_cis_section1_rule_1_8_1_5_params_state }}"
      when:
        - etc_issue_file.stat.exists

  when:
    - ubuntu_2004_cis_section1_rule_1_8_1_5
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_8_1_5
    - level_1

- name: "1.8.1.6 | Ensure permissions on /etc/issue.net are configured (Automated)"
  block:

    - name: "1.8.1.6 | Ensure permissions on /etc/issue.net are configured (Automated) | Check if /etc/issue.net exists"
      stat:
        path: "{{ ubuntu_2004_cis_section1_rule_1_8_1_6_params_path }}"
      register: etc_issue_net_file
      failed_when: false

    - name: "1.8.1.6 | Ensure permissions on /etc/issue.net are configured (Automated) | set /etc/issue.net permissions"
      file:
        path: "{{ ubuntu_2004_cis_section1_rule_1_8_1_6_params_path }}"
        mode: "{{ ubuntu_2004_cis_section1_rule_1_8_1_6_params_mode }}"
        owner: "{{ ubuntu_2004_cis_section1_rule_1_8_1_6_params_owner }}"
        group: "{{ ubuntu_2004_cis_section1_rule_1_8_1_6_params_group }}"
        state: "{{ ubuntu_2004_cis_section1_rule_1_8_1_6_params_state }}"
      when:
        - etc_issue_net_file.stat.exists

  when:
    - ubuntu_2004_cis_section1_rule_1_8_1_6
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_8_1_6
    - level_1

- name: "1.9 | Ensure updates, patches, and additional security software are installed (Manual)"
  apt:
    upgrade: "{{ ubuntu_2004_cis_section1_rule_1_9_params_upgrade }}"
    update_cache: "{{ ubuntu_2004_cis_section1_rule_1_9_params_update_cache }}"
  when:
    - not skip_for_development
    - ubuntu_2004_cis_section1_rule_1_9
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_9
    - level_1

- name: "1.10 | Ensure GDM is removed or login is configured (Automated)"
  block:

    - name: "1.10 | Ensure GDM is removed or login is configured (Automated) | Configure banner-message-enable if gdm3 installed"
      lineinfile:
        path: "{{ ubuntu_2004_cis_section1_rule_1_10_params_path }}"
        line: "{{ ubuntu_2004_cis_section1_rule_1_10_params_banner_message_enable_line }}"
        regexp: "{{ ubuntu_2004_cis_section1_rule_1_10_params_banner_message_enable_regexp }}"
        state: "{{ ubuntu_2004_cis_section1_rule_1_10_params_state }}"
        owner: "{{ ubuntu_2004_cis_section1_rule_1_10_params_owner }}"
        group: "{{ ubuntu_2004_cis_section1_rule_1_10_params_group }}"
        mode: "{{ ubuntu_2004_cis_section1_rule_1_10_params_mode }}"
      notify:
        - reload gdm

    - name: "1.10 | Ensure GDM is removed or login is configured (Automated) | Configure banner-message-text if gdm3 installed"
      lineinfile:
        path: "{{ ubuntu_2004_cis_section1_rule_1_10_params_path }}"
        line: "{{ ubuntu_2004_cis_section1_rule_1_10_params_banner_message_text_line }}"
        regexp: "{{ ubuntu_2004_cis_section1_rule_1_10_params_banner_message_text_regexp }}"
        state: "{{ ubuntu_2004_cis_section1_rule_1_10_params_state }}"
        owner: "{{ ubuntu_2004_cis_section1_rule_1_10_params_owner }}"
        group: "{{ ubuntu_2004_cis_section1_rule_1_10_params_group }}"
        mode: "{{ ubuntu_2004_cis_section1_rule_1_10_params_mode }}"
      notify:
        - reload gdm

    - name: "1.10 | Ensure GDM is removed or login is configured (Automated) | Configure disable-user-list if gdm3 installed"
      lineinfile:
        path: "{{ ubuntu_2004_cis_section1_rule_1_10_params_path }}"
        line: "{{ ubuntu_2004_cis_section1_rule_1_10_params_disable_user_list_line }}"
        regexp: "{{ ubuntu_2004_cis_section1_rule_1_10_params_disable_user_list_regexp }}"
        state: "{{ ubuntu_2004_cis_section1_rule_1_10_params_state }}"
        owner: "{{ ubuntu_2004_cis_section1_rule_1_10_params_owner }}"
        group: "{{ ubuntu_2004_cis_section1_rule_1_10_params_group }}"
        mode: "{{ ubuntu_2004_cis_section1_rule_1_10_params_mode }}"
      notify:
        - reload gdm

  when:
    - "'gdm3' in ansible_facts.packages"
    - ubuntu_2004_cis_section1_rule_1_10
    - ubuntu_2004_cis_section1
  tags:
    - section1
    - rule_1_10
    - level_1
